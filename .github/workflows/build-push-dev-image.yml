name: Build-Push-Dev-Image
on:
  push:
    # branches:
    #   - develop

jobs:
  build-push-dev-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }} 
        fetch-depth: 0

    - name: Semver Check
      uses: paulhatch/semantic-version@v5.0.2
      id: version
      with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
        major_regexp_flags: ""
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
        minor_regexp_flags: ""
        # A string to determine the format of the version output
        # version_format: "${major}.${minor}.${patch}-prerelease${increment}"
        version_format: "${major}.${minor}.${patch}-prerelease${increment}"
        # # Named version, will be used as suffix for name version tag
        # namespace: my-service
        # # If this is set to true, *every* commit will be treated as a new version.
        # bump_each_commit: false
        # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
        search_commit_body: false

    - name: Get Version 
      run: |
        echo "v${{ steps.version.outputs.version }}"

    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        # registry: ${{ secrets.CONTAINER_REGISTRY }}
        # username: ${{ secrets.CONTAINER_USERNAME }}
        # password: ${{ secrets.CONTAINER_TOKEN }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        logout: true
    # This action should use Git Context
    - name: Build Push Container
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: joshuaseals/appstore-testing:v${{ steps.version.outputs.version }}, joshuaseals/appstore-testing:latest
        # cache-from: type=registry,ref=user/app:latest
        # cache-to: type=inline
