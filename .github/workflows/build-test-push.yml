# Ideally this is how we would run everything, from a central gh action repo.
name: Push-Test-Branch
on:
  workflow_dispatch:
    inputs:
        artifactHub:
            description: 'Personal Repository to push branch builds specific for testing. (NOT FOR DEVELOP OR RELEASE IMAGES)'
            required: true
            type: string
        artifactHubUName:
            description: Name of account for Artifact Repository
            required: true
            type: string
        artifactHubAuth:
            description: Token to use for authentication to container registry.
            required: true
            type: string
        tagName:
            description: Tag for the image, must not be develop or semver.
            required: true 
            type: string
jobs:
    build-branch-image:
      runs-on: ubuntu-latest
      steps:
    
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }} 
            # fetch-depth: 0 means, get all branches and commits
          fetch-depth: 0
    

      # Docker Buildx is important to caching in the Build And Push Container
      # step
      # https://github.com/marketplace/actions/build-and-push-docker-images

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
              network=host
      - name: Add mask
        run: |
          echo "::add-mask::${{ inputs.artifactHubAuth }}"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.artifactHub }}
          username: ${{  inputs.artifactHubUName }}
          password: ${{ inputs.artifactHubAuth }}
          logout: true


      # Notes on Cache: 
      # https://docs.docker.com/build/ci/github-actions/examples/#inline-cache
      - name: Build Push Container
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # Push to renci-registry and dockerhub here.
          # cache comes from dockerhub.
          tags: |
              ${{ inputs.artifactHub }}:${{ inputs.tagName }}
